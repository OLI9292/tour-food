{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/images/search-by-route.png","webpack:///./src/images/search-nearby.png"],"names":["searchByRoute","require","searchNearby","IndexPage","props","state","autocompleteOptions","autocompleteResults","dataLoaded","locations","isLoading","componentDidMount","this","requestLocation","setState","window","setData","loadData","fetch","then","res","text","rows","uniqBy","split","slice","map","parseRow","filter","r","l","name","latitude","longitude","console","log","length","uniq","city","navigator","hasPermissions","undefined","permissions","options","enableHighAccuracy","timeout","maximumAge","handlePosition","position","coords","reverseGeocode","address","locationA","myLocation","myLocationCoordinates","getPostion","geolocation","getCurrentPosition","err","message","query","reset","results","searchType","render","selectSearchComponent","style","height","display","flexDirection","onClick","src","margin","lineHeight","color","filterBy","tag","navigate","textAlign","boxSizing","width","cursor","opacity","transition","top","left","backgroundColor","colors","orange","title","searchProps","bind","siteTitle","miniature","React","Component","module","exports"],"mappings":"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","file":"component---src-pages-index-js-ed7f3009bbdea2049560.js","sourcesContent":["import React from \"react\"\nimport { navigate } from \"gatsby\"\nimport { uniq, uniqBy } from \"lodash\"\n\nimport SEO from \"../components/seo\"\nimport HeaderComponent from \"../components/header\"\nimport Search from \"../components/search\"\n\nimport {\n  Box,\n  Header,\n  SearchBoxes,\n  SearchBox,\n  Image,\n} from \"../components/common\"\n\nimport { parseRow, reverseGeocode } from \"../lib/helpers\"\n\nimport colors from \"../lib/colors\"\n\nconst searchByRoute = require(`../images/search-by-route.png`)\n\nconst searchNearby = require(`../images/search-nearby.png`)\n\nconst DATA_URL =\n  \"https://docs.google.com/spreadsheets/d/e/2PACX-1vSba72Al-RA3rUkBruesaJpLe8A5pIm-EJ8ZvY5SeSIzJWi8sebSnNqBTckypxCCyEhk2UaWvD_6Kfe/pub?output=csv\"\n\nconst MY_LOCATION_TEXT = \"My Location - \"\n\nconst REVOKE_GEOLOCATION_PERMISSION = false\n\nexport default class IndexPage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      autocompleteOptions: [],\n      autocompleteResults: [],\n      dataLoaded: false,\n      locations: [],\n      isLoading: true,\n      // searchType: \"route\",\n    }\n  }\n\n  componentDidMount() {\n    this.requestLocation()\n    this.setState({ isLoading: false })\n\n    if (REVOKE_GEOLOCATION_PERMISSION) {\n      navigator.permissions.revoke({ name: \"geolocation\" })\n    }\n\n    window.locations ? this.setData(window.locations) : this.loadData()\n  }\n\n  loadData() {\n    fetch(DATA_URL)\n      .then(res => res.text())\n      .then(rows => {\n        const locations = uniqBy(\n          rows\n            .split(\"\\n\")\n            .slice(1)\n            .map(parseRow)\n            .filter(r => r),\n          l => `${l.name} ${l.latitude} ${l.longitude}`\n        )\n        window.locations = locations\n        this.setData(locations)\n      })\n  }\n\n  setData(locations) {\n    console.log(`Data loaded: ${locations.length} locations.`)\n\n    const autocompleteOptions = uniq(\n      locations.map(l => `${l.city}, ${l.state}`)\n    )\n\n    this.setState({\n      locations,\n      autocompleteOptions,\n      dataLoaded: true,\n    })\n  }\n\n  requestLocation() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API/Using_the_Permissions_API\n    if (!navigator) return console.log(\"Navigator is undefined\")\n\n    const hasPermissions = navigator.permissions !== undefined\n    console.log(`Has permissions: ${hasPermissions}`)\n    const options = { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\n\n    const handlePosition = position => {\n      if (!position || !position.coords) return\n      const { latitude, longitude } = position.coords\n      console.log(`Position: ${latitude}, ${longitude}`)\n      // https://developers.google.com/maps/documentation/javascript/examples/geocoding-reverse\n      reverseGeocode(`${latitude},${longitude}`, address => {\n        if (!address || this.state.locationA) return\n        this.setState({\n          myLocation: `${MY_LOCATION_TEXT}${address}`,\n          myLocationCoordinates: [latitude, longitude],\n        })\n      })\n    }\n\n    const getPostion = () => {\n      console.log(\"Getting position\")\n      navigator.geolocation.getCurrentPosition(\n        handlePosition,\n        err => console.log(`ERR: ${err.message}`),\n        options\n      )\n    }\n\n    hasPermissions\n      ? navigator.permissions.query({ name: \"geolocation\" }).then(res => {\n          if (res.state !== \"denied\") getPostion()\n        })\n      : getPostion()\n  }\n\n  reset() {\n    this.setState({\n      autocompleteResults: [],\n      results: undefined,\n      searchType: undefined,\n    })\n  }\n\n  render() {\n    const {\n      autocompleteOptions,\n      dataLoaded,\n      locations,\n      myLocation,\n      myLocationCoordinates,\n      searchType,\n    } = this.state\n\n    const selectSearchComponent = (\n      <div\n        style={{\n          height: \"calc(100vh - 60px)\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <SearchBoxes>\n          <SearchBox onClick={() => this.setState({ searchType: \"route\" })}>\n            <Image src={searchByRoute} />\n\n            <Header style={{ margin: 0, lineHeight: \"40px\" }} color={\"white\"}>\n              search by route\n            </Header>\n          </SearchBox>\n\n          <SearchBox\n            onClick={() => this.setState({ searchType: \"destination\" })}\n          >\n            <Image src={searchNearby} />\n\n            <Header style={{ margin: 0, lineHeight: \"40px\" }} color={\"white\"}>\n              search by location\n            </Header>\n          </SearchBox>\n        </SearchBoxes>\n\n        <Header\n          onClick={() => {\n            if (!locations.length) return\n            const filterBy = {\n              state: undefined,\n              city: undefined,\n              tag: undefined,\n            }\n            navigate(\"/results\", {\n              state: { results: [], locations, filterBy },\n            })\n          }}\n          style={{\n            textAlign: \"center\",\n            lineHeight: \"60px\",\n            boxSizing: \"border-box\",\n            width: \"100%\",\n            cursor: \"pointer\",\n            color: \"white\",\n            margin: 0,\n            opacity: dataLoaded ? 1 : 0,\n            transition: \"opacity 0.5s\",\n          }}\n        >\n          VIEW ALL\n        </Header>\n      </div>\n    )\n\n    if (this.state.isLoading) {\n      return (\n        <div\n          style={{\n            width: \"100vw\",\n            height: \"100vh\",\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            backgroundColor: colors.orange,\n          }}\n        />\n      )\n    }\n\n    return (\n      <Box style={{ backgroundColor: searchType ? \"white\" : colors.orange }}>\n        <SEO title=\"Home\" />\n\n        <HeaderComponent\n          searchProps={{}}\n          reset={this.reset.bind(this)}\n          siteTitle=\"Tour Food\"\n        />\n\n        {searchType ? (\n          <Search\n            autocompleteOptions={autocompleteOptions}\n            locations={locations}\n            miniature={false}\n            myLocation={myLocation}\n            myLocationCoordinates={myLocationCoordinates}\n            searchType={searchType}\n          />\n        ) : (\n          selectSearchComponent\n        )}\n      </Box>\n    )\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/search-by-route-b06728f0c61d271df5962decc1f415c1.png\";","module.exports = __webpack_public_path__ + \"static/search-nearby-ba5444a805504845e5185b5e9fcfac14.png\";"],"sourceRoot":""}